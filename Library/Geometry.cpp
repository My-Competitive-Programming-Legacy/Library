// THIS IS GEOMETRY TEMPLATE
typedef complex<long double> point;
#define EPS (long double)0.0000000001
#define X real()
#define Y imag()
#define vec(a,b) ((b) - (a))
#define polar(r,t) ((r)*exp(point(0,(t))))
#define angle(v) (atan2((v).Y , (v).X))
#define length(v) ((long double)hypot((v).Y , (v).x))
#define lengthSqr(v) (dot((v) , (v) ))
#define dot(a,b) ((conj((a)) *(b)).real())
#define cross(a,b) ((conj((a)) *(b)).imag())
#define rotate(v,t) ((v)*exp(point(0 , (t))))
#define rotate_about(v, t , a ) (rotate(vec((a),(v)) , (t)) + (a))
#define reflect(p, m) ((conj((p)/(m))) * (m))
#define normalize(p) ((p)/length(p))
#define same(a,b) (lengthSqr(vec(a,b)) < EPS)
#define mid(a,b) (((a) + (b))/point(2,0))
#define perpendicular_left (point(-(a).Y , (a).X))
#define perpendicular_right (point((a).Y , -(a).X))